# IPS=$(kubectl get nodes -l node-role.kubernetes.io/control-plane -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}' 2>/dev/null || 
#      kubectl get nodes -l node-role.kubernetes.io/master -o jsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')

# [ -z "$IPS" ] && { echo "No master IPs found"; exit 1; }

# kubectl apply -f - << EOF
# apiVersion: v1
# kind: Endpoints
# metadata:
#   name: ops-etcd
#   namespace: kube-system
# subsets:
#   - addresses:
# $(echo $IPS | tr ' ' '\n' | sed 's/^/    - ip: /')
#     ports:
#       - name: metrics
#         port: 2381
#         protocol: TCP
# EOF
---
apiVersion: v1
kind: Service
metadata:
  name: ops-etcd
  namespace: kube-system
  labels:
    app: etcd
    component: etcd
spec:
  selector:
    component: etcd
  ports:
    - name: metrics
      port: 2381
      targetPort: 2381
      protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ops-etcd
  namespace: monitoring
  labels:
    tier: ops
    app: etcd
spec:
  namespaceSelector:
    matchNames:
      - kube-system
  selector:
    matchLabels:
      component: etcd
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
      scheme: http